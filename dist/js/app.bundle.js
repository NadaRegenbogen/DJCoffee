(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AudioController=void 0;const utils_1=require("./utils");class AudioController{constructor(){this.divCurrentArtwork=document.querySelector("#current-artwork"),this.pCurrentArtist=document.querySelector("#current-artist"),this.pCurrentTrack=document.querySelector("#current-track"),this.btnPlayPause=document.querySelector("#play-pause"),this.spanCurrentTime=document.querySelector("#ct"),this.spanTotalTime=document.querySelector("#tt"),this.divTimeline=document.querySelector(".timeline"),this.divTimelineOverlay=document.querySelector(".timeline-overlay"),this.divProgressLine=document.querySelector(".progress-line"),this.availableTracks=[],this.currentTrack=null,this.btnPlayPause.onclick=(()=>this.changePlayPauseState()),this.divTimelineOverlay.onclick=(e=>this.changeTrackPosition(e))}changeTrackPosition(e){const t=this.currentTrack,r=this.divTimeline.getBoundingClientRect(),i=e.x-r.left,n=i/r.width*t.getDuration();this.divProgressLine.style.width=i+"px",t.setCurrentTime(n)}changePlayPauseState(){null==this.currentTrack?(this.currentTrack=this.availableTracks[0],this.playForSource(this.currentTrack.getSource()),this.btnPlayPause.innerHTML='<i class="icon-pause"></i>'):this.currentTrack.isPaused()?(this.currentTrack.play(),this.btnPlayPause.innerHTML='<i class="icon-pause"></i>'):(this.currentTrack.pause(),this.btnPlayPause.innerHTML='<i class="icon-play"></i>')}populate(e){this.availableTracks=e}findAudioWrapperForSource(e){for(let t of this.availableTracks)if(t.getSource()==e)return t;return null}fillTrackDetails(){null!=this.currentTrack&&(this.pCurrentArtist.innerHTML=this.currentTrack.getArtist(),this.pCurrentTrack.innerHTML=this.currentTrack.getTitle(),this.divCurrentArtwork.innerHTML=`<img src="${this.currentTrack.getCover()}" />`,this.spanCurrentTime.innerHTML=(0,utils_1.formatSeconds)(this.currentTrack.getCurrentTime()),this.spanTotalTime.innerHTML=(0,utils_1.formatSeconds)(this.currentTrack.getDuration()))}defineTrackEvents(){const e=this.currentTrack;e.onLoadedMetadata(()=>{this.spanTotalTime.innerHTML=(0,utils_1.formatSeconds)(e.getDuration())}),e.onTimeUpdate(()=>{this.spanCurrentTime.innerHTML=(0,utils_1.formatSeconds)(e.getCurrentTime());const t=this.divTimeline.getBoundingClientRect(),r=e.getCurrentTime()/e.getDuration()*t.width;this.divProgressLine.style.width=r+"px"})}playForSource(e){null==this.currentTrack||this.currentTrack.isPaused()||this.currentTrack.pause(),this.currentTrack=this.findAudioWrapperForSource(e),this.currentTrack.load_and_play(),this.fillTrackDetails(),this.defineTrackEvents(),this.btnPlayPause.innerHTML='<i class="icon-pause"></i>'}}exports.AudioController=AudioController},{"./utils":4}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AudioWrapper=void 0;class AudioWrapper{constructor(t){this.artist=t.artist,this.track=t.track,this.source=t.source,this.cover=t.cover,this.audio=new Audio}load_and_play(){null!=this.audio.currentSrc&&null!=this.audio.currentSrc&&""!=this.audio.currentSrc||(this.audio=new Audio(this.source)),this.audio.paused&&(this.audio.currentTime=0,this.audio.play())}play(){this.audio.play()}pause(){this.audio.pause()}getCurrentTime(){return isNaN(this.audio.currentTime)?0:this.audio.currentTime}getDuration(){return isNaN(this.audio.duration)?0:this.audio.duration}isPaused(){return this.audio.paused}getSource(){return this.source}getArtist(){return this.artist}getTitle(){return this.track}getCover(){return this.cover}setCurrentTime(t){this.audio.currentTime=t}onLoadedMetadata(t){this.audio.addEventListener("loadedmetadata",t)}onTimeUpdate(t){this.audio.addEventListener("timeupdate",t)}}exports.AudioWrapper=AudioWrapper},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const AudioWrapper_1=require("./AudioWrapper"),AudioController_1=require("./AudioController"),utils_1=require("./utils"),divPlaylist=document.querySelector(".playlist");let controller=new AudioController_1.AudioController;window.addEventListener("load",()=>{fetch("./audio/audio.json").then(e=>e.json().then(e=>{let r=[];divPlaylist.innerHTML="";for(let t of e)r.push(new AudioWrapper_1.AudioWrapper(t)),divPlaylist.innerHTML+=(0,utils_1.createTracklistField)(t);controller.populate(r)}))}),document.body.addEventListener("click",e=>{const r=e.target;if(r.classList.contains("track-overlay")){const e=r.getAttribute("data-source");controller.playForSource(e)}})},{"./AudioController":1,"./AudioWrapper":2,"./utils":4}],4:[function(require,module,exports){"use strict";function createTracklistField(t){return`\n    <div class="track-container">\n        <div class="track-overlay"\n        data-source="${t.source}"\n        data-artist="${t.artist}"\n        data-cover="${t.cover}"\n        data-track="${t.track}"\n        ></div>\n        <div class="thumbnail">\n            <img src="${t.cover}">\n        </div>\n        <div class="track-info">\n            <p class="artist">${t.artist}</p>\n            <p class="track-name">${t.track}</p>\n        </div>\n    </div>\n    `}function formatSeconds(t){const r=parseInt(String(t/60)),a=parseInt(String(t%60));return`${(r<10?"0":"")+r}:${(a<10?"0":"")+a}`}Object.defineProperty(exports,"__esModule",{value:!0}),exports.formatSeconds=exports.createTracklistField=void 0,exports.createTracklistField=createTracklistField,exports.formatSeconds=formatSeconds},{}]},{},[3]);
//# sourceMappingURL=app.bundle.js.map
//# sourceMappingURL=app.bundle.js.map